version: '2' # specify docker-compose version

# Define the services/containers to be run
services:

  nginx:
    image: nectar_nginx:1
    container_name: nginx
    build:
      context: . # specify the directory of the Dockerfile
      dockerfile: ./.docker/nginx/docker-nginx.dockerfile
    volumes:
      - ./.docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./.docker/nginx/certificates/nginx.crt:/etc/nginx/ssl/nginx.crt
      - ./.docker/nginx/certificates/nginx.key:/etc/nginx/ssl/nginx.key
    env_file:
      - ./.docker/nginx/env/nginx.${APP_ENV}.env
    links:
      - node:node
    ports:
      - "80:80"
      #- "443:443"
    depends_on:
      - angularjs
    networks:
      - CryptoBeeApp-network
  
  angularjs: # name of the first service
    image: nectar_angularjs:1
    container_name: angularjs
    build:
      context: . # specify the directory of the Dockerfile
      dockerfile: ./.docker/angularjs/docker-angularjs.dockerfile
    ports:
      - "3000:3000" # specify port forewarding
    volumes:
      - ./blur-admin/src:/app/src
      - ./blur-admin/gulp:/app/gulp
      - ./blur-admin/gulpfile.js:/app/gulpfile.js
      - ./blur-admin/bower.json:/app/bower.json
      - ./blur-admin/package.json:/app/package.json
    env_file:
      - ./.docker/angularjs/env/angularjs.${APP_ENV}.env
    depends_on:
      - node
      - django
    networks:
      - CryptoBeeApp-network

  node: #name of the second service
    image: nectar_node:1
    container_name: node
    build:
      context: . # specify the directory of the Dockerfile
      dockerfile: ./.docker/node/docker-node.dockerfile
    volumes:
      - ./crypto-exchange-api/:/app/
      - ./crypto-exchange-api/package.json:/app/package.json
    env_file:
      - ./.docker/node/env/node.${APP_ENV}.env
    ports:
      - "9000:9000" #specify ports forewarding
    depends_on:
      - mongodb
    networks:
      - CryptoBeeApp-network

  django:
    image: nectar_django:1
    container_name: django
    build:
      context: .
      dockerfile: ./.docker/django/docker-django.dockerfile
    volumes:
      - ./modern-django/:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.docker/django/env/django.${APP_ENV}.env
    networks:
      - CryptoBeeApp-network

  mongodb:
    image: nectar_mongodb:1
    container_name: mongodb
    build:
      context: .
      dockerfile: ./.docker/mongo/docker-mongo.dockerfile
    volumes:
      - ./data/db:/data/db
      - ./data/configdb:/data/configdb
    ports:
      - "27017:27017"
    env_file:
      - ./.docker/mongo/env/mongo.${APP_ENV}.env
    networks:
      - CryptoBeeApp-network

networks:
  CryptoBeeApp-network:
    driver: bridge